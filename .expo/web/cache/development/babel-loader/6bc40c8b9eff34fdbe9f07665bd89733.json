{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport OrderScreen from \"./app/screens/OrderScreen\";\nimport { store } from \"./app/store/store\";\nimport { Provider } from 'react-redux';\nimport * as ReactDOMClient from 'react-dom/client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nexport function App(_ref) {\n  var callback = _ref.callback;\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsx(OrderScreen, {})\n    })\n  });\n}\nvar rootElement = document.getElementById(\"root\");\nvar root = ReactDOMClient.createRoot(rootElement);\nroot.render(_jsx(App, {\n  callback: function callback() {\n    return console.log(\"renderered\");\n  }\n}));\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});","map":{"version":3,"names":["StatusBar","OrderScreen","store","Provider","ReactDOMClient","App","callback","styles","container","rootElement","document","getElementById","root","createRoot","render","console","log","StyleSheet","create","flex","backgroundColor","paddingTop","Platform","OS","currentHeight"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, SafeAreaView, Platform } from 'react-native';\nimport OrderScreen from './app/screens/OrderScreen';\nimport { store } from './app/store/store';\nimport { Provider } from 'react-redux';\nimport * as ReactDOMClient from 'react-dom/client';\n\n// import App from 'App';\n\nexport function App({ callback }) {\n  // Callback will be called when the div is first created.\n  return (\n    <SafeAreaView style={styles.container}>\n      <Provider store={store}>\n        <OrderScreen />\n      </Provider>\n    </SafeAreaView>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\n\nconst root = ReactDOMClient.createRoot(rootElement);\nroot.render(<App callback={() => console.log(\"renderered\")} />);\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAE5C,OAAOC,WAAW;AAClB,SAASC,KAAK;AACd,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,KAAKC,cAAc,MAAM,kBAAkB;;AAAC;;AAInD,OAAO,SAASC,GAAG,OAAe;EAAA,IAAZC,QAAQ,QAARA,QAAQ;EAE5B,OACE,KAAC,YAAY;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UACpC,KAAC,QAAQ;MAAC,KAAK,EAAEN,KAAM;MAAA,UACrB,KAAC,WAAW;IAAG;EACN,EACE;AAEnB;AAEA,IAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAEnD,IAAMC,IAAI,GAAGR,cAAc,CAACS,UAAU,CAACJ,WAAW,CAAC;AACnDG,IAAI,CAACE,MAAM,CAAC,KAAC,GAAG;EAAC,QAAQ,EAAE;IAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAAA;AAAC,EAAG,CAAC;AAG/D,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAGvB,SAAS,CAACwB,aAAa,GAAG;EACpE;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}