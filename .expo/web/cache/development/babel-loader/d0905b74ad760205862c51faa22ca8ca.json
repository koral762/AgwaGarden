{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useSelector } from 'react-redux';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AvailablePlants(props) {\n  var PrevieWidth = useDimensions().screen.width;\n  var plants = useSelector(function (store) {\n    return store.orderPlantsReducer.availablePlants;\n  });\n  var categories = useSelector(function (store) {\n    return store.orderPlantsReducer.plantsCategories;\n  });\n  var categoriesToView = categories.map(function (category) {\n    return category.name;\n  });\n  var _useState = useState(plants.filter(function (item) {\n      return !item.isSelected;\n    })),\n    _useState2 = _slicedToArray(_useState, 2),\n    plantsToView = _useState2[0],\n    setPlantsToView = _useState2[1];\n  function CategorySelected(selectedItem, index) {\n    var plantsInCategory = categories[index].plants.map(function (plant) {\n      return plant.id;\n    });\n    setPlantsToView(plants.filter(function (item) {\n      return plantsInCategory.includes(item.id);\n    }));\n  }\n  return _jsxs(View, {\n    style: styles.AvailablePlantsContainer,\n    children: [_jsx(SelectDropdown, {\n      data: categoriesToView,\n      onSelect: function onSelect(selectedItem, index) {\n        CategorySelected(selectedItem, index);\n      }\n    }), _jsx(View, {\n      style: styles.categoryPlants,\n      children: _jsx(FlatList, {\n        horizontal: true,\n        data: plantsToView,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(PlantsCirclePreview, {\n            PrevieWidth: PrevieWidth / 6,\n            margin: 10,\n            plant: item,\n            isSelected: false\n          });\n        }\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.button,\n        disabled: true,\n        children: _jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"SAVE CHANGES\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  AvailablePlantsContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(239,234,253,1)',\n    justifyContent: 'space-between'\n  },\n  categoryPlants: {\n    height: '70%',\n    width: '100%',\n    flexDirection: 'row',\n    paddingLeft: 9\n  },\n  buttonContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    backgroundColor: \"rgba(254,253,255,1)\"\n  },\n  button: {\n    backgroundColor: 'blue',\n    width: '80%',\n    height: '30%',\n    alignItems: 'center',\n    borderRadius: 8,\n    justifyContent: 'center',\n    backgroundColor: \"rgba(148,217,234,1)\"\n  }\n});\nexport default AvailablePlants;","map":{"version":3,"names":["React","useState","PlantsCirclePreview","useDimensions","useSelector","SelectDropdown","AvailablePlants","props","PrevieWidth","screen","width","plants","store","orderPlantsReducer","availablePlants","categories","plantsCategories","categoriesToView","map","category","name","filter","item","isSelected","plantsToView","setPlantsToView","CategorySelected","selectedItem","index","plantsInCategory","plant","id","includes","styles","AvailablePlantsContainer","categoryPlants","buttonContainer","button","fontWeight","StyleSheet","create","flex","backgroundColor","justifyContent","height","flexDirection","paddingLeft","alignItems","borderRadius"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/AvailablePlants.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Text, TouchableOpacity, ScrollView, FlatList } from 'react-native';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\n\r\n\r\nfunction AvailablePlants(props) {\r\n\r\n    const PrevieWidth = useDimensions().screen.width;\r\n    const plants = useSelector(store => store.orderPlantsReducer.availablePlants);\r\n    const categories = useSelector(store => store.orderPlantsReducer.plantsCategories);\r\n    const categoriesToView = categories.map(category => category.name);\r\n\r\n    const [plantsToView,setPlantsToView] = useState(plants.filter(item => !item.isSelected))\r\n\r\n    function CategorySelected(selectedItem, index) {\r\n        let plantsInCategory = categories[index].plants.map(plant => plant.id);\r\n        setPlantsToView(plants.filter(item => plantsInCategory.includes(item.id)));\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.AvailablePlantsContainer}>\r\n\r\n            <SelectDropdown data={categoriesToView} onSelect={(selectedItem, index) => { CategorySelected(selectedItem, index) }} />\r\n\r\n            <View style={styles.categoryPlants}>\r\n                <FlatList\r\n                    horizontal={true}\r\n                    data={plantsToView}\r\n                    renderItem={({ item }) => (\r\n                        <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={10} plant={item} isSelected={false} />\r\n                    )} />\r\n\r\n            </View>\r\n\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.button} disabled={true}><Text style={{ fontWeight: 'bold' }}>SAVE CHANGES</Text></TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    AvailablePlantsContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(239,234,253,1)',\r\n        justifyContent: 'space-between'\r\n    },\r\n    categoryPlants: {\r\n\r\n        height: '70%',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        paddingLeft: 9\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'yellow',\r\n        backgroundColor: \"rgba(254,253,255,1)\",\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        width: '80%',\r\n        height: '30%',\r\n        alignItems: 'center',\r\n        borderRadius: 8,\r\n        justifyContent: 'center',\r\n        backgroundColor: \"rgba(148,217,234,1)\",\r\n\r\n    }\r\n\r\n})\r\n\r\nexport default AvailablePlants;"],"mappings":"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"},"metadata":{},"sourceType":"module"}