{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { setCategoriesFromApi, setAvailablePlantsFromApi } from \"../store/orderPlantsReducer\";\nimport { useDispatch } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var SetDataToState = function SetDataToState() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dataCategories = _useState4[0],\n    setDataCategories = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dataPlants = _useState6[0],\n    setDataPlants = _useState6[1];\n  var dispatch = useDispatch();\n  var urlCategory = 'https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/agwafarm.json';\n  var urlPlants = 'https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/plants.json';\n  var getCategories = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(urlCategory, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        var json = yield response.json();\n        setDataCategories(json.categories);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getCategories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getPlants = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(urlPlants, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        var json = yield response.json();\n        setDataPlants(json.plants);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getPlants() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getPlants();\n    getCategories();\n  }, []);\n  if (dataCategories) dispatch(setCategoriesFromApi(dataCategories));\n  if (dataPlants) dispatch(setAvailablePlantsFromApi(dataPlants));\n  return _jsx(View, {});\n};","map":{"version":3,"names":["React","useEffect","useState","setCategoriesFromApi","setAvailablePlantsFromApi","useDispatch","SetDataToState","isLoading","setLoading","dataCategories","setDataCategories","dataPlants","setDataPlants","dispatch","urlCategory","urlPlants","getCategories","response","fetch","method","headers","Accept","json","categories","error","console","getPlants","plants"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/apis/SetDataToState.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View } from 'react-native';\r\nimport { setCategoriesFromApi, setAvailablePlantsFromApi } from '../store/orderPlantsReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const SetDataToState = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [dataCategories, setDataCategories] = useState();\r\n    const [dataPlants, setDataPlants] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n    const urlCategory = 'https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/agwafarm.json'\r\n    const urlPlants = 'https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/plants.json'\r\n\r\n\r\n    const getCategories = async () => {\r\n        try {\r\n            const response = await fetch(urlCategory, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            const json = await response.json();\r\n            setDataCategories(json.categories);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const getPlants = async () => {\r\n        try {\r\n            const response = await fetch(urlPlants, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            const json = await response.json();\r\n            setDataPlants(json.plants);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlants();\r\n        getCategories();\r\n    }, []);\r\n\r\n    if (dataCategories) dispatch(setCategoriesFromApi(dataCategories));\r\n\r\n    if (dataPlants) dispatch(setAvailablePlantsFromApi(dataPlants));\r\n\r\n    return (\r\n        <View></View>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,SAASC,oBAAoB,EAAEC,yBAAyB;AACxD,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAChC,gBAAgCJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCK,SAAS;IAAEC,UAAU;EAC5B,iBAA4CN,QAAQ,EAAE;IAAA;IAA/CO,cAAc;IAAEC,iBAAiB;EACxC,iBAAoCR,QAAQ,EAAE;IAAA;IAAvCS,UAAU;IAAEC,aAAa;EAEhC,IAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,IAAMS,WAAW,GAAG,kGAAkG;EACtH,IAAMC,SAAS,GAAG,gGAAgG;EAGlH,IAAMC,aAAa;IAAA,6BAAG,aAAY;MAC9B,IAAI;QACA,IAAMC,QAAQ,SAASC,KAAK,CAACJ,WAAW,EAAE;UACtCK,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QACF,IAAMC,IAAI,SAASL,QAAQ,CAACK,IAAI,EAAE;QAClCZ,iBAAiB,CAACY,IAAI,CAACC,UAAU,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,SAAS;QACNhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAA,gBAhBKQ,aAAa;MAAA;IAAA;EAAA,GAgBlB;EAED,IAAMU,SAAS;IAAA,8BAAG,aAAY;MAC1B,IAAI;QACA,IAAMT,QAAQ,SAASC,KAAK,CAACH,SAAS,EAAE;UACpCI,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QACF,IAAMC,IAAI,SAASL,QAAQ,CAACK,IAAI,EAAE;QAClCV,aAAa,CAACU,IAAI,CAACK,MAAM,CAAC;MAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,SAAS;QACNhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAA,gBAhBKkB,SAAS;MAAA;IAAA;EAAA,GAgBd;EAEDzB,SAAS,CAAC,YAAM;IACZyB,SAAS,EAAE;IACXV,aAAa,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIP,cAAc,EAAEI,QAAQ,CAACV,oBAAoB,CAACM,cAAc,CAAC,CAAC;EAElE,IAAIE,UAAU,EAAEE,QAAQ,CAACT,yBAAyB,CAACO,UAAU,CAAC,CAAC;EAE/D,OACI,KAAC,IAAI,KAAQ;AAErB,CAAC"},"metadata":{},"sourceType":"module"}