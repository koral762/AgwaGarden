{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar getMoviesFromApiAsync = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('https://reactnative.dev/movies.json');\n      var json = yield response.json();\n      return json.movies;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function getMoviesFromApiAsync() {\n    return _ref.apply(this, arguments);\n  };\n}();\ngetMoviesFromApiAsync();","map":{"version":3,"names":["getMoviesFromApiAsync","response","fetch","json","movies","error","console"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/services/plants.js"],"sourcesContent":["const getMoviesFromApiAsync = async () => {\r\n    try {\r\n        const response = await fetch(\r\n            'https://reactnative.dev/movies.json'\r\n        );\r\n        const json = await response.json();\r\n        return json.movies;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n\r\n\r\ngetMoviesFromApiAsync();\r\n\r\n\r\n// import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n\r\n// export const plantsApi = createApi({\r\n//     reducerPath: \"plantsApi\",\r\n//     baseQuery: fetchBaseQuery({\r\n//         baseUrl: \"https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/\",\r\n//     }),\r\n//     endpoints: (builder) => ({\r\n\r\n//         getPlants: builder.query({\r\n\r\n//             query: (type) => `${type}`,\r\n\r\n//         })\r\n//     })\r\n// })\r\n\r\n\r\n// export const { useGetAllPlantsQuery } = plantsApi;"],"mappings":";AAAA,IAAMA,qBAAqB;EAAA,6BAAG,aAAY;IACtC,IAAI;MACA,IAAMC,QAAQ,SAASC,KAAK,CACxB,qCAAqC,CACxC;MACD,IAAMC,IAAI,SAASF,QAAQ,CAACE,IAAI,EAAE;MAClC,OAAOA,IAAI,CAACC,MAAM;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAAA,gBAVKL,qBAAqB;IAAA;EAAA;AAAA,GAU1B;AAGDA,qBAAqB,EAAE"},"metadata":{},"sourceType":"script"}