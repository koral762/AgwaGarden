{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useSelector } from 'react-redux';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport SaveOrder from \"./SaveOrder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AvailablePlants(_ref) {\n  var navigation = _ref.navigation;\n  var PrevieWidth = useDimensions().screen.width;\n  var plants = useSelector(function (store) {\n    return store.orderPlantsReducer.availablePlants;\n  });\n  var plantsToView = plants.filter(function (item) {\n    return !item.isSelected;\n  });\n  var categories = useSelector(function (store) {\n    return store.orderPlantsReducer.plantsCategories;\n  });\n  var categoriesToView = categories.map(function (category) {\n    return category.name;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    plantsInCategory = _useState2[0],\n    setPlantsInCategory = _useState2[1];\n  function CategorySelected(selectedItem, index) {\n    setPlantsInCategory(categories[index].plants.map(function (plant) {\n      return plant.id;\n    }));\n  }\n  return _jsxs(View, {\n    style: styles.AvailablePlantsContainer,\n    children: [_jsx(SelectDropdown, {\n      defaultButtonText: 'Select category',\n      data: categoriesToView,\n      buttonTextStyle: styles.dropdown2BtnTxtStyle,\n      dropdownIconPosition: 'right',\n      dropdownStyle: styles.dropdown2DropdownStyle,\n      rowStyle: styles.dropdown2RowStyle,\n      rowTextStyle: styles.dropdown2RowTxtStyle,\n      renderDropdownIcon: function renderDropdownIcon(isOpened) {\n        return _jsx(FontAwesome, {\n          name: isOpened ? 'chevron-up' : 'chevron-down',\n          color: '#444',\n          size: 18\n        });\n      },\n      onSelect: function onSelect(selectedItem, index) {\n        CategorySelected(selectedItem, index);\n      }\n    }), _jsx(View, {\n      style: styles.categoryPlants,\n      children: _jsx(FlatList, {\n        showsVerticalScrollIndicator: false,\n        horizontal: true,\n        data: plantsInCategory.length ? plantsToView.filter(function (item) {\n          return plantsInCategory.includes(item.id);\n        }) : plantsToView,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(PlantsCirclePreview, {\n            PrevieWidth: PrevieWidth / 6,\n            margin: 10,\n            plant: item,\n            isSelected: item.isSelected\n          });\n        }\n      })\n    }), _jsx(View, {\n      children: _jsx(SaveOrder, {\n        navigation: navigation\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  AvailablePlantsContainer: {\n    flex: 0.7,\n    backgroundColor: 'rgba(239,234,253,1)',\n    justifyContent: 'space-between'\n  },\n  categoryPlants: {\n    height: '55%',\n    width: '100%',\n    flexDirection: 'row',\n    paddingLeft: 9\n  },\n  dropdown2DropdownStyle: {\n    backgroundColor: 'rgba(255,255,255,0)',\n    borderBottomLeftRadius: 12,\n    borderBottomRightRadius: 12,\n    width: '50%'\n  },\n  dropdown2RowStyle: {\n    backgroundColor: '#444',\n    borderBottomColor: '#C5C5C5'\n  },\n  dropdown2RowTxtStyle: {\n    color: '#FFF',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  dropdown2BtnTxtStyle: {\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});\nexport default AvailablePlants;","map":{"version":3,"names":["React","useState","PlantsCirclePreview","useDimensions","useSelector","SelectDropdown","FontAwesome","SaveOrder","AvailablePlants","navigation","PrevieWidth","screen","width","plants","store","orderPlantsReducer","availablePlants","plantsToView","filter","item","isSelected","categories","plantsCategories","categoriesToView","map","category","name","plantsInCategory","setPlantsInCategory","CategorySelected","selectedItem","index","plant","id","styles","AvailablePlantsContainer","dropdown2BtnTxtStyle","dropdown2DropdownStyle","dropdown2RowStyle","dropdown2RowTxtStyle","isOpened","categoryPlants","length","includes","StyleSheet","create","flex","backgroundColor","justifyContent","height","flexDirection","paddingLeft","borderBottomLeftRadius","borderBottomRightRadius","borderBottomColor","color","textAlign","fontWeight"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/AvailablePlants.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, FlatList } from 'react-native';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport SaveOrder from './SaveOrder';\r\n\r\nfunction AvailablePlants({ navigation }) {\r\n\r\n    const PrevieWidth = useDimensions().screen.width;\r\n\r\n    const plants = useSelector(store => store.orderPlantsReducer.availablePlants);\r\n\r\n    const plantsToView = plants.filter(item => !item.isSelected);\r\n\r\n\r\n    const categories = useSelector(store => store.orderPlantsReducer.plantsCategories);\r\n    var categoriesToView = categories.map(category => category.name);\r\n    const [plantsInCategory, setPlantsInCategory] = useState([]);\r\n\r\n\r\n    function CategorySelected(selectedItem, index) {\r\n        setPlantsInCategory(categories[index].plants.map(plant => plant.id));\r\n    }\r\n\r\n    return (\r\n        <View style={styles.AvailablePlantsContainer}>\r\n\r\n            <SelectDropdown\r\n                defaultButtonText={'Select category'}\r\n                data={categoriesToView}\r\n                buttonTextStyle={styles.dropdown2BtnTxtStyle}\r\n                dropdownIconPosition={'right'}\r\n                dropdownStyle={styles.dropdown2DropdownStyle}\r\n                rowStyle={styles.dropdown2RowStyle}\r\n                rowTextStyle={styles.dropdown2RowTxtStyle}\r\n                renderDropdownIcon={isOpened => {\r\n                    return <FontAwesome name={isOpened ? 'chevron-up' : 'chevron-down'} color={'#444'} size={18} />;\r\n                }}\r\n                onSelect={(selectedItem, index) => { CategorySelected(selectedItem, index) }} />\r\n\r\n            <View style={styles.categoryPlants}>\r\n                <FlatList\r\n                    showsVerticalScrollIndicator={false}\r\n                    horizontal={true}\r\n                    data={(plantsInCategory.length) ? plantsToView.filter(item => plantsInCategory.includes(item.id)) : plantsToView}\r\n                    renderItem={({ item }) => (\r\n                        <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={10} plant={item} isSelected={item.isSelected} />\r\n                    )} />\r\n            </View>\r\n\r\n\r\n            <View>\r\n                <SaveOrder navigation={navigation} />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    AvailablePlantsContainer: {\r\n        flex: 0.7,\r\n        backgroundColor: 'rgba(239,234,253,1)',\r\n        justifyContent: 'space-between'\r\n    },\r\n    categoryPlants: {\r\n        height: '55%',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        paddingLeft: 9\r\n    },\r\n    dropdown2DropdownStyle: {\r\n        backgroundColor: 'rgba(255,255,255,0)',\r\n        borderBottomLeftRadius: 12,\r\n        borderBottomRightRadius: 12,\r\n        width: '50%',\r\n    },\r\n    dropdown2RowStyle: { backgroundColor: '#444', borderBottomColor: '#C5C5C5' },\r\n    dropdown2RowTxtStyle: {\r\n        color: '#FFF',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    dropdown2BtnTxtStyle: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n})\r\n\r\nexport default AvailablePlants;"],"mappings":"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"},"metadata":{},"sourceType":"module"}