{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useSelector } from 'react-redux';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AvailablePlants(props) {\n  var PrevieWidth = useDimensions().screen.width;\n  var plants = useSelector(function (store) {\n    return store.orderPlantsReducer.availablePlants;\n  });\n  var plantsToView = plants.filter(function (item) {\n    return !item.isSelected;\n  });\n  var categories = useSelector(function (store) {\n    return store.orderPlantsReducer.plantsCategories;\n  });\n  var categoriesToView = categories.map(function (category) {\n    return category.name;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    plantsInCategory = _useState2[0],\n    setPlantsInCategory = _useState2[1];\n  function CategorySelected(selectedItem, index) {\n    setPlantsInCategory(categories[index].plants.map(function (plant) {\n      return plant.id;\n    }));\n  }\n  return _jsxs(View, {\n    style: styles.AvailablePlantsContainer,\n    children: [_jsx(SelectDropdown, {\n      style: styles.selectCategory,\n      data: categoriesToView,\n      onSelect: function onSelect(selectedItem, index) {\n        CategorySelected(selectedItem, index);\n      }\n    }), _jsx(View, {\n      style: styles.categoryPlants,\n      children: _jsx(FlatList, {\n        horizontal: true,\n        data: plantsInCategory.length ? plantsToView.filter(function (item) {\n          return plantsInCategory.includes(item.id);\n        }) : plantsToView,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(PlantsCirclePreview, {\n            PrevieWidth: PrevieWidth / 6,\n            margin: 10,\n            plant: item,\n            isSelected: false\n          });\n        }\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.button,\n        disabled: true,\n        children: _jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"SAVE CHANGES\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  AvailablePlantsContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(239,234,253,1)',\n    justifyContent: 'space-between'\n  },\n  categoryPlants: {\n    height: '70%',\n    width: '100%',\n    flexDirection: 'row',\n    paddingLeft: 9\n  },\n  buttonContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    backgroundColor: \"rgba(254,253,255,1)\"\n  },\n  selectCategory: {},\n  button: {\n    backgroundColor: 'blue',\n    width: '80%',\n    height: '30%',\n    alignItems: 'center',\n    borderRadius: 8,\n    justifyContent: 'center',\n    backgroundColor: \"rgba(148,217,234,1)\"\n  }\n});\nexport default AvailablePlants;","map":{"version":3,"names":["React","useState","PlantsCirclePreview","useDimensions","useSelector","SelectDropdown","AvailablePlants","props","PrevieWidth","screen","width","plants","store","orderPlantsReducer","availablePlants","plantsToView","filter","item","isSelected","categories","plantsCategories","categoriesToView","map","category","name","plantsInCategory","setPlantsInCategory","CategorySelected","selectedItem","index","plant","id","styles","AvailablePlantsContainer","selectCategory","categoryPlants","length","includes","buttonContainer","button","fontWeight","StyleSheet","create","flex","backgroundColor","justifyContent","height","flexDirection","paddingLeft","alignItems","borderRadius"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/AvailablePlants.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Text, TouchableOpacity, ScrollView, FlatList } from 'react-native';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\n\r\n\r\nfunction AvailablePlants(props) {\r\n\r\n    const PrevieWidth = useDimensions().screen.width;\r\n\r\n    const plants = useSelector(store => store.orderPlantsReducer.availablePlants);\r\n    const plantsToView = plants.filter(item => !item.isSelected);\r\n\r\n    const categories = useSelector(store => store.orderPlantsReducer.plantsCategories);\r\n    const categoriesToView = categories.map(category => category.name);\r\n    const [plantsInCategory, setPlantsInCategory] = useState([]);\r\n\r\n\r\n    function CategorySelected(selectedItem, index) {\r\n        setPlantsInCategory(categories[index].plants.map(plant => plant.id));\r\n    }\r\n\r\n    return (\r\n        <View style={styles.AvailablePlantsContainer}>\r\n\r\n            <SelectDropdown style={styles.selectCategory} data={categoriesToView} onSelect={(selectedItem, index) => { CategorySelected(selectedItem, index) }} />\r\n\r\n            <View style={styles.categoryPlants}>\r\n                <FlatList\r\n                    horizontal={true}\r\n                    data={(plantsInCategory.length) ? plantsToView.filter(item => plantsInCategory.includes(item.id)) : plantsToView}\r\n                    renderItem={({ item }) => (\r\n                        <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={10} plant={item} isSelected={false} />\r\n                    )} />\r\n            </View>\r\n\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.button} disabled={true}><Text style={{ fontWeight: 'bold' }}>SAVE CHANGES</Text></TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    AvailablePlantsContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(239,234,253,1)',\r\n        justifyContent: 'space-between'\r\n    },\r\n    categoryPlants: {\r\n\r\n        height: '70%',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        paddingLeft: 9\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'yellow',\r\n        backgroundColor: \"rgba(254,253,255,1)\",\r\n\r\n    },\r\n    selectCategory: {\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        width: '80%',\r\n        height: '30%',\r\n        alignItems: 'center',\r\n        borderRadius: 8,\r\n        justifyContent: 'center',\r\n        backgroundColor: \"rgba(148,217,234,1)\",\r\n\r\n    }\r\n\r\n})\r\n\r\nexport default AvailablePlants;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAExC,OAAOC,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AAAA;AAAA;AAGzD,SAASC,eAAe,CAACC,KAAK,EAAE;EAE5B,IAAMC,WAAW,GAAGL,aAAa,EAAE,CAACM,MAAM,CAACC,KAAK;EAEhD,IAAMC,MAAM,GAAGP,WAAW,CAAC,UAAAQ,KAAK;IAAA,OAAIA,KAAK,CAACC,kBAAkB,CAACC,eAAe;EAAA,EAAC;EAC7E,IAAMC,YAAY,GAAGJ,MAAM,CAACK,MAAM,CAAC,UAAAC,IAAI;IAAA,OAAI,CAACA,IAAI,CAACC,UAAU;EAAA,EAAC;EAE5D,IAAMC,UAAU,GAAGf,WAAW,CAAC,UAAAQ,KAAK;IAAA,OAAIA,KAAK,CAACC,kBAAkB,CAACO,gBAAgB;EAAA,EAAC;EAClF,IAAMC,gBAAgB,GAAGF,UAAU,CAACG,GAAG,CAAC,UAAAC,QAAQ;IAAA,OAAIA,QAAQ,CAACC,IAAI;EAAA,EAAC;EAClE,gBAAgDvB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArDwB,gBAAgB;IAAEC,mBAAmB;EAG5C,SAASC,gBAAgB,CAACC,YAAY,EAAEC,KAAK,EAAE;IAC3CH,mBAAmB,CAACP,UAAU,CAACU,KAAK,CAAC,CAAClB,MAAM,CAACW,GAAG,CAAC,UAAAQ,KAAK;MAAA,OAAIA,KAAK,CAACC,EAAE;IAAA,EAAC,CAAC;EACxE;EAEA,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,wBAAyB;IAAA,WAEzC,KAAC,cAAc;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAC,IAAI,EAAEb,gBAAiB;MAAC,QAAQ,EAAE,kBAACO,YAAY,EAAEC,KAAK,EAAK;QAAEF,gBAAgB,CAACC,YAAY,EAAEC,KAAK,CAAC;MAAC;IAAE,EAAG,EAEtJ,KAAC,IAAI;MAAC,KAAK,EAAEG,MAAM,CAACG,cAAe;MAAA,UAC/B,KAAC,QAAQ;QACL,UAAU,EAAE,IAAK;QACjB,IAAI,EAAGV,gBAAgB,CAACW,MAAM,GAAIrB,YAAY,CAACC,MAAM,CAAC,UAAAC,IAAI;UAAA,OAAIQ,gBAAgB,CAACY,QAAQ,CAACpB,IAAI,CAACc,EAAE,CAAC;QAAA,EAAC,GAAGhB,YAAa;QACjH,UAAU,EAAE;UAAA,IAAGE,IAAI,QAAJA,IAAI;UAAA,OACf,KAAC,mBAAmB;YAAC,WAAW,EAAET,WAAW,GAAG,CAAE;YAAC,MAAM,EAAE,EAAG;YAAC,KAAK,EAAES,IAAK;YAAC,UAAU,EAAE;UAAM,EAAG;QAAA;MACnG;IAAG,EACN,EAGP,KAAC,IAAI;MAAC,KAAK,EAAEe,MAAM,CAACM,eAAgB;MAAA,UAChC,KAAC,gBAAgB;QAAC,KAAK,EAAEN,MAAM,CAACO,MAAO;QAAC,QAAQ,EAAE,IAAK;QAAA,UAAC,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAA;QAAA;MAAoB;IAAmB,EAChI;EAAA,EACJ;AAEf;AAEA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAE7BT,wBAAwB,EAAE;IACtBU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,qBAAqB;IACtCC,cAAc,EAAE;EACpB,CAAC;EACDV,cAAc,EAAE;IAEZW,MAAM,EAAE,KAAK;IACbpC,KAAK,EAAE,MAAM;IACbqC,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE;EACjB,CAAC;EACDV,eAAe,EAAE;IACbK,IAAI,EAAE,CAAC;IACPjC,KAAK,EAAE,MAAM;IACbuC,UAAU,EAAE,QAAQ;IACpBJ,cAAc,EAAE,QAAQ;IACxBD,eAAe,EAAE,QAAQ;IACzBA,eAAe,EAAE;EAErB,CAAC;EACDV,cAAc,EAAE,CAEhB,CAAC;EACDK,MAAM,EAAE;IACJK,eAAe,EAAE,MAAM;IACvBlC,KAAK,EAAE,KAAK;IACZoC,MAAM,EAAE,KAAK;IACbG,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,CAAC;IACfL,cAAc,EAAE,QAAQ;IACxBD,eAAe,EAAE;EAErB;AAEJ,CAAC,CAAC;AAEF,eAAetC,eAAe"},"metadata":{},"sourceType":"module"}