{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport getMonth from \"../utils/getMonths\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addToSelectedPlants } from \"../store/orderPlantsReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction YourNextOrder(props) {\n  var _getMonth = getMonth(),\n    _getMonth2 = _slicedToArray(_getMonth, 2),\n    currentMonth = _getMonth2[0],\n    nextMonth = _getMonth2[1];\n  var PrevieWidth = useDimensions().screen.width;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    response = _useState6[0],\n    setResponse = _useState6[1];\n  var dispatch = useDispatch();\n\n  useEffect(function () {\n    fetch(\"https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/plants.json\", {\n      credentials: 'include',\n      method: 'POST',\n      headers: headers\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoading(false);\n      setResponse(result);\n    }, function (error) {\n      setIsLoading(false);\n      setError(error);\n    });\n  }, []);\n  var getAvailablePlants = function getAvailablePlants() {\n    if (isLoading) return _jsx(ActivityIndicator, {\n      size: \"large\"\n    });\n    if (error) return _jsx(Text, {\n      children: \"error\"\n    });\n    console.log(response);\n  };\n  return _jsxs(View, {\n    style: styles.orderContainer,\n    children: [_jsxs(View, {\n      style: styles.orderScreenText,\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 28\n        },\n        children: \"Your next order\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: '5%',\n          fontSize: 22\n        },\n        children: \"The monthly order consists of 5 plants.\"\n      }), _jsxs(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: [\"Changes to your next order can be made until the end of \", currentMonth, \". This order will be shipped on the beginning of \", nextMonth, \".\"]\n      }), _jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          marginTop: '7%',\n          fontSize: 20\n        },\n        children: \"Your selected plants:\"\n      })]\n    }), _jsxs(View, {\n      style: styles.selectedPlants,\n      children: [_jsx(PlantsCirclePreview, {\n        PrevieWidth: PrevieWidth / 6,\n        margin: 4\n      }), _jsx(PlantsCirclePreview, {\n        PrevieWidth: PrevieWidth / 6,\n        margin: 4\n      }), _jsx(PlantsCirclePreview, {\n        PrevieWidth: PrevieWidth / 6,\n        margin: 4\n      }), _jsx(PlantsCirclePreview, {\n        PrevieWidth: PrevieWidth / 6,\n        margin: 4\n      }), _jsx(PlantsCirclePreview, {\n        PrevieWidth: PrevieWidth / 6,\n        margin: 4\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  orderContainer: {\n    height: '55%',\n    width: '100%',\n    backgroundColor: 'rgba(247,245,255,1)',\n    justifyContent: 'space-between'\n  },\n  orderScreenText: {\n    paddingTop: 30,\n    paddingLeft: 30,\n    paddingRight: 40\n  },\n  selectedPlants: {\n    backgroundColor: 'blue',\n    width: '100%',\n    height: '30%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});\nexport default YourNextOrder;","map":{"version":3,"names":["React","getMonth","PlantsCirclePreview","useDimensions","useEffect","useState","useSelector","useDispatch","addToSelectedPlants","YourNextOrder","props","currentMonth","nextMonth","PrevieWidth","screen","width","isLoading","setIsLoading","error","setError","response","setResponse","dispatch","fetch","credentials","method","headers","then","res","json","result","getAvailablePlants","console","log","styles","orderContainer","orderScreenText","fontWeight","fontSize","marginTop","selectedPlants","StyleSheet","create","height","backgroundColor","justifyContent","paddingTop","paddingLeft","paddingRight","flexDirection"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/YourNextOrder.js"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Text, ActivityIndicator } from 'react-native';\r\nimport getMonth from '../utils/getMonths';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToSelectedPlants } from '../store/orderPlantsReducer';\r\n\r\nfunction YourNextOrder(props) {\r\n\r\n    const [currentMonth, nextMonth] = getMonth();\r\n    const PrevieWidth = useDimensions().screen.width;\r\n\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [error, setError] = useState();\r\n    let [response, setResponse] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n    // dispatch(getAvailablePlants());\r\n    // const availablePlants = useSelector(store=>store.orderPlantsReducer.availablePlants);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/plants.json\", { credentials: 'include',\r\n        method: 'POST',\r\n        headers: headers})\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoading(false);\r\n                    setResponse(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoading(false);\r\n                    setError(error);\r\n                }\r\n                \r\n            )\r\n    }, [])\r\n\r\n    const getAvailablePlants = () => {\r\n        if (isLoading) return <ActivityIndicator size=\"large\" />;\r\n        if (error) return <Text>error</Text>;\r\n        console.log(response);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.orderContainer}>\r\n            <View style={styles.orderScreenText}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 28 }}>Your next order</Text>\r\n                <Text style={{ marginTop: '5%', fontSize: 22 }}>The monthly order consists of 5 plants.</Text>\r\n                <Text style={{ fontSize: 20 }}>\r\n                    Changes to your next order can be made until the end of {currentMonth}.\r\n                    This order will be shipped on the beginning of {nextMonth}.\r\n                </Text>\r\n                <Text style={{ fontWeight: \"bold\", marginTop: '7%', fontSize: 20 }}>Your selected plants:</Text>\r\n            </View>\r\n\r\n            <View style={styles.selectedPlants}>\r\n                <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} />\r\n                <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} />\r\n                <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} />\r\n                <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} />\r\n                <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    orderContainer: {\r\n        height: '55%',\r\n        width: '100%',\r\n        backgroundColor: 'rgba(247,245,255,1)',\r\n        justifyContent: 'space-between',\r\n    },\r\n    orderScreenText: {\r\n        paddingTop: 30,\r\n        paddingLeft: 30,\r\n        paddingRight: 40,\r\n    },\r\n    selectedPlants: {\r\n        backgroundColor: 'blue',\r\n        width: '100%',\r\n        height: '30%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n    }\r\n})\r\n\r\nexport default YourNextOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module"}