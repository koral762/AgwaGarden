{"ast":null,"code":"var contains = function contains(query, item) {\n  if (item) {\n    if (typeof item != 'object') {\n      var str = item.toString().toLowerCase();\n      if (str.includes(query.toString().toLowerCase())) {\n        return true;\n      }\n    } else {\n      for (var key in item) {\n        if (item[key]) {\n          if (typeof item[key] == 'object') {\n            return contains(query, item[key]);\n          } else {\n            var _str = item[key].toString().toLowerCase();\n            if (_str.includes(query.toString().toLowerCase())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\nexport var deepSearchInArr = function deepSearchInArr(query, arr) {\n  var array = [];\n  for (var i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};","map":{"version":3,"names":["contains","query","item","str","toString","toLowerCase","includes","key","deepSearchInArr","arr","array","i","length","push"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/node_modules/react-native-select-dropdown/src/helpers/deepSearchInArr.js"],"sourcesContent":["const contains = (query, item) => {\n  if (item) {\n    // string, number or boolean\n    if (typeof item != 'object') {\n      const str = item.toString().toLowerCase();\n      if (str.includes(query.toString().toLowerCase())) {\n        return true;\n      }\n    } else {\n      // item is an object\n      for (let key in item) {\n        if (item[key]) {\n          if (typeof item[key] == 'object') {\n            return contains(query, item[key]);\n          } else {\n            const str = item[key].toString().toLowerCase();\n            if (str.includes(query.toString().toLowerCase())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const deepSearchInArr = (query, arr) => {\n  let array = [];\n  for (let i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};\n"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAK,EAAEC,IAAI,EAAK;EAChC,IAAIA,IAAI,EAAE;IAER,IAAI,OAAOA,IAAI,IAAI,QAAQ,EAAE;MAC3B,IAAMC,GAAG,GAAGD,IAAI,CAACE,QAAQ,EAAE,CAACC,WAAW,EAAE;MACzC,IAAIF,GAAG,CAACG,QAAQ,CAACL,KAAK,CAACG,QAAQ,EAAE,CAACC,WAAW,EAAE,CAAC,EAAE;QAChD,OAAO,IAAI;MACb;IACF,CAAC,MAAM;MAEL,KAAK,IAAIE,GAAG,IAAIL,IAAI,EAAE;QACpB,IAAIA,IAAI,CAACK,GAAG,CAAC,EAAE;UACb,IAAI,OAAOL,IAAI,CAACK,GAAG,CAAC,IAAI,QAAQ,EAAE;YAChC,OAAOP,QAAQ,CAACC,KAAK,EAAEC,IAAI,CAACK,GAAG,CAAC,CAAC;UACnC,CAAC,MAAM;YACL,IAAMJ,IAAG,GAAGD,IAAI,CAACK,GAAG,CAAC,CAACH,QAAQ,EAAE,CAACC,WAAW,EAAE;YAC9C,IAAIF,IAAG,CAACG,QAAQ,CAACL,KAAK,CAACG,QAAQ,EAAE,CAACC,WAAW,EAAE,CAAC,EAAE;cAChD,OAAO,IAAI;YACb;UACF;QACF;MACF;IACF;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAe,CAAIP,KAAK,EAAEQ,GAAG,EAAK;EAC7C,IAAIC,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,GAAG,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IACxC,IAAIX,QAAQ,CAACC,KAAK,EAAEQ,GAAG,CAACE,CAAC,CAAC,CAAC,EAAE;MAC3BD,KAAK,CAACG,IAAI,CAACJ,GAAG,CAACE,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACLD,KAAK,CAACG,IAAI,CAAC,IAAI,CAAC;IAClB;IACA,IAAIF,CAAC,IAAIF,GAAG,CAACG,MAAM,GAAG,CAAC,EAAE;MACvB,OAAOF,KAAK;IACd;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}