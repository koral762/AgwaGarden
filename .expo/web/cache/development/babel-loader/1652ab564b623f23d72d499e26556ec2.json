{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport getMonth from \"../utils/getMonths\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addToSelectedPlants, getAvailablePlants } from \"../store/orderPlantsReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction YourNextOrder(props) {\n  var _getMonth = getMonth(),\n    _getMonth2 = _slicedToArray(_getMonth, 2),\n    currentMonth = _getMonth2[0],\n    nextMonth = _getMonth2[1];\n  var PrevieWidth = useDimensions().screen.width;\n  var selectedPlants = useSelector(function (store) {\n    return store.orderPlantsReducer.selectedPlants;\n  });\n  return _jsxs(View, {\n    style: styles.orderContainer,\n    children: [_jsxs(View, {\n      style: styles.orderScreenText,\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 28\n        },\n        children: \"Your next order\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: '5%',\n          fontSize: 22\n        },\n        children: \"The monthly order consists of 5 plants.\"\n      }), _jsxs(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: [\"Changes to your next order can be made until the end of \", currentMonth, \". This order will be shipped on the beginning of \", nextMonth, \".\"]\n      }), _jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          marginTop: '7%',\n          fontSize: 20\n        },\n        children: \"Your selected plants:\"\n      })]\n    }), _jsx(View, {\n      style: styles.selectedPlants,\n      children: _jsx(FlatList, {\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        horizontal: true,\n        data: selectedPlants,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(PlantsCirclePreview, {\n            PrevieWidth: PrevieWidth / 6,\n            margin: 4,\n            plant: item,\n            isSelected: true\n          });\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  orderContainer: {\n    height: '55%',\n    width: '100%',\n    backgroundColor: 'rgba(247,245,255,1)',\n    justifyContent: 'space-between'\n  },\n  orderScreenText: {\n    paddingTop: 30,\n    paddingLeft: 30,\n    paddingRight: 40\n  },\n  selectedPlants: {\n    backgroundColor: 'blue',\n    width: '100%',\n    height: '30%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});\nexport default YourNextOrder;","map":{"version":3,"names":["React","getMonth","PlantsCirclePreview","useDimensions","useEffect","useState","useSelector","useDispatch","addToSelectedPlants","getAvailablePlants","YourNextOrder","props","currentMonth","nextMonth","PrevieWidth","screen","width","selectedPlants","store","orderPlantsReducer","styles","orderContainer","orderScreenText","fontWeight","fontSize","marginTop","item","id","StyleSheet","create","height","backgroundColor","justifyContent","paddingTop","paddingLeft","paddingRight","flexDirection"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/YourNextOrder.js"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Text, ActivityIndicator, FlatList } from 'react-native';\r\nimport getMonth from '../utils/getMonths';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToSelectedPlants, getAvailablePlants } from '../store/orderPlantsReducer';\r\n\r\nfunction YourNextOrder(props) {\r\n\r\n    const [currentMonth, nextMonth] = getMonth();\r\n    const PrevieWidth = useDimensions().screen.width;\r\n    const selectedPlants = useSelector(store => store.orderPlantsReducer.selectedPlants);\r\n\r\n    return (\r\n        <View style={styles.orderContainer}>\r\n            <View style={styles.orderScreenText}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 28 }}>Your next order</Text>\r\n                <Text style={{ marginTop: '5%', fontSize: 22 }}>The monthly order consists of 5 plants.</Text>\r\n                <Text style={{ fontSize: 20 }}>\r\n                    Changes to your next order can be made until the end of {currentMonth}.\r\n                    This order will be shipped on the beginning of {nextMonth}.\r\n                </Text>\r\n                <Text style={{ fontWeight: \"bold\", marginTop: '7%', fontSize: 20 }}>Your selected plants:</Text>\r\n            </View>\r\n\r\n            <View style={styles.selectedPlants}>\r\n            <FlatList \r\n                keyExtractor={(item)=>item.id}\r\n                horizontal={true}\r\n                data={selectedPlants} \r\n                renderItem={({item})=>(\r\n                    <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={4} plant={item} isSelected={true} />\r\n                )}/>\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    orderContainer: {\r\n        height: '55%',\r\n        width: '100%',\r\n        backgroundColor: 'rgba(247,245,255,1)',\r\n        justifyContent: 'space-between',\r\n    },\r\n    orderScreenText: {\r\n        paddingTop: 30,\r\n        paddingLeft: 30,\r\n        paddingRight: 40,\r\n    },\r\n    selectedPlants: {\r\n        backgroundColor: 'blue',\r\n        width: '100%',\r\n        height: '30%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n    }\r\n})\r\n\r\nexport default YourNextOrder;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAE1B,OAAOC,QAAQ;AACf,OAAOC,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,EAAEC,kBAAkB;AAAsC;AAAA;AAEtF,SAASC,aAAa,CAACC,KAAK,EAAE;EAE1B,gBAAkCV,QAAQ,EAAE;IAAA;IAArCW,YAAY;IAAEC,SAAS;EAC9B,IAAMC,WAAW,GAAGX,aAAa,EAAE,CAACY,MAAM,CAACC,KAAK;EAChD,IAAMC,cAAc,GAAGX,WAAW,CAAC,UAAAY,KAAK;IAAA,OAAIA,KAAK,CAACC,kBAAkB,CAACF,cAAc;EAAA,EAAC;EAEpF,OACI,MAAC,IAAI;IAAC,KAAK,EAAEG,MAAM,CAACC,cAAe;IAAA,WAC/B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,eAAgB;MAAA,WAChC,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,UAAU,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAA;MAAA,EAAuB,EACzE,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,SAAS,EAAE,IAAI;UAAED,QAAQ,EAAE;QAAG,CAAE;QAAA;MAAA,EAA+C,EAC9F,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEA,QAAQ,EAAE;QAAG,CAAE;QAAA,uEAC+BZ,YAAY,uDACrBC,SAAS;MAAA,EACtD,EACP,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEU,UAAU,EAAE,MAAM;UAAEE,SAAS,EAAE,IAAI;UAAED,QAAQ,EAAE;QAAG,CAAE;QAAA;MAAA,EAA6B;IAAA,EAC7F,EAEP,KAAC,IAAI;MAAC,KAAK,EAAEJ,MAAM,CAACH,cAAe;MAAA,UACnC,KAAC,QAAQ;QACL,YAAY,EAAE,sBAACS,IAAI;UAAA,OAAGA,IAAI,CAACC,EAAE;QAAA,CAAC;QAC9B,UAAU,EAAE,IAAK;QACjB,IAAI,EAAEV,cAAe;QACrB,UAAU,EAAE;UAAA,IAAES,IAAI,QAAJA,IAAI;UAAA,OACd,KAAC,mBAAmB;YAAC,WAAW,EAAEZ,WAAW,GAAG,CAAE;YAAC,MAAM,EAAE,CAAE;YAAC,KAAK,EAAEY,IAAK;YAAC,UAAU,EAAE;UAAK,EAAG;QAAA;MACjG;IAAE,EACD;EAAA,EAEJ;AAEf;AAEA,IAAMN,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,cAAc,EAAE;IACZS,MAAM,EAAE,KAAK;IACbd,KAAK,EAAE,MAAM;IACbe,eAAe,EAAE,qBAAqB;IACtCC,cAAc,EAAE;EACpB,CAAC;EACDV,eAAe,EAAE;IACbW,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAClB,CAAC;EACDlB,cAAc,EAAE;IACZc,eAAe,EAAE,MAAM;IACvBf,KAAK,EAAE,MAAM;IACbc,MAAM,EAAE,KAAK;IACbM,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAetB,aAAa"},"metadata":{},"sourceType":"module"}