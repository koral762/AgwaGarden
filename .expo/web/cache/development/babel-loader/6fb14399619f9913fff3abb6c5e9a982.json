{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { plantsApi } from \"../../services/plants\";\nimport AvailablePlants from \"../comps/AvailablePlants\";\nimport NavBar from \"../comps/NavBar\";\nimport YourNextOrder from \"../comps/YourNextOrder\";\nimport { addToSelectedPlants, getAvailablePlants } from \"../store/orderPlantsReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction OrderScreen(_x) {\n  return _OrderScreen.apply(this, arguments);\n}\nfunction _OrderScreen() {\n  _OrderScreen = _asyncToGenerator(function* (props) {\n    var dispatch = useDispatch();\n\n    useEffect(function () {\n\n    }, []);\n    var currentUserLastOrder = useSelector(function (store) {\n      return store.usersReducer.currentUser.ordersHistory;\n    });\n    if (currentUserLastOrder.length !== 0) {\n      currentUserLastOrder = currentUserLastOrder[currentUserLastOrder.length - 1];\n      for (var x = 0; x < 5; x++) {\n        dispatch(addToSelectedPlants(currentUserLastOrder.plants[x]));\n      }\n    }\n    return _jsxs(View, {\n      style: styles.background,\n      children: [_jsx(NavBar, {}), _jsx(YourNextOrder, {}), _jsx(AvailablePlants, {})]\n    });\n  });\n  return _OrderScreen.apply(this, arguments);\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: \"pink\"\n  }\n});\nexport default OrderScreen;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","plantsApi","AvailablePlants","NavBar","YourNextOrder","addToSelectedPlants","getAvailablePlants","OrderScreen","props","dispatch","currentUserLastOrder","store","usersReducer","currentUser","ordersHistory","length","x","plants","styles","background","StyleSheet","create","flex","backgroundColor"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/screens/OrderScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, StyleSheet, Text } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plantsApi } from '../../services/plants';\r\nimport AvailablePlants from '../comps/AvailablePlants';\r\nimport NavBar from '../comps/NavBar';\r\nimport YourNextOrder from '../comps/YourNextOrder';\r\nimport { addToSelectedPlants, getAvailablePlants } from '../store/orderPlantsReducer';\r\n\r\n\r\nasync function OrderScreen(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // dispatch(getAvailablePlants());\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // const { data, error, isLoading } = plantsApi.endpoints.getPlants.useQuery('plants.json');\r\n\r\n    }, [])\r\n\r\n    var currentUserLastOrder = useSelector(store => store.usersReducer.currentUser.ordersHistory);\r\n\r\n    if (currentUserLastOrder.length !== 0) {\r\n\r\n        currentUserLastOrder = currentUserLastOrder[currentUserLastOrder.length - 1];\r\n\r\n        for (var x = 0; x < 5; x++) {\r\n            dispatch(addToSelectedPlants(currentUserLastOrder.plants[x]))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.background}>\r\n            <NavBar />\r\n            <YourNextOrder />\r\n            <AvailablePlants />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        backgroundColor: \"pink\"\r\n    }\r\n})\r\n\r\nexport default OrderScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAEzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS;AAClB,OAAOC,eAAe;AACtB,OAAOC,MAAM;AACb,OAAOC,aAAa;AACpB,SAASC,mBAAmB,EAAEC,kBAAkB;AAAsC;AAAA;AAAA,SAGvEC,WAAW;EAAA;AAAA;AAAA;EAAA,iCAA1B,WAA2BC,KAAK,EAAE;IAG9B,IAAMC,QAAQ,GAAGV,WAAW,EAAE;;IAK9BD,SAAS,CAAC,YAAM;;IAIhB,CAAC,EAAE,EAAE,CAAC;IAEN,IAAIY,oBAAoB,GAAGV,WAAW,CAAC,UAAAW,KAAK;MAAA,OAAIA,KAAK,CAACC,YAAY,CAACC,WAAW,CAACC,aAAa;IAAA,EAAC;IAE7F,IAAIJ,oBAAoB,CAACK,MAAM,KAAK,CAAC,EAAE;MAEnCL,oBAAoB,GAAGA,oBAAoB,CAACA,oBAAoB,CAACK,MAAM,GAAG,CAAC,CAAC;MAE5E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxBP,QAAQ,CAACJ,mBAAmB,CAACK,oBAAoB,CAACO,MAAM,CAACD,CAAC,CAAC,CAAC,CAAC;MACjE;IAEJ;IAEA,OACI,MAAC,IAAI;MAAC,KAAK,EAAEE,MAAM,CAACC,UAAW;MAAA,WAC3B,KAAC,MAAM,KAAG,EACV,KAAC,aAAa,KAAG,EACjB,KAAC,eAAe,KAAG;IAAA,EAChB;EAEf,CAAC;EAAA;AAAA;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC7BF,UAAU,EAAE;IACRG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAEF,eAAehB,WAAW"},"metadata":{},"sourceType":"module"}