{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { plantsApi } from \"../../services/plants\";\nimport AvailablePlants from \"../comps/AvailablePlants\";\nimport NavBar from \"../comps/NavBar\";\nimport YourNextOrder from \"../comps/YourNextOrder\";\nimport { addToSelectedPlants, getAvailablePlants } from \"../store/orderPlantsReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction OrderScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataplants = _useState2[0],\n    setDataPlants = _useState2[1];\n  var _plantsApi$endpoints$ = plantsApi.endpoints.getPlants.useQuery('plants.json'),\n    data = _plantsApi$endpoints$.data,\n    error = _plantsApi$endpoints$.error,\n    isLoading = _plantsApi$endpoints$.isLoading;\n  if (data) {\n    setDataPlants(data.plants.filter(function (plants) {\n      return plants.id === cucumber_iznik;\n    }));\n    console.log(dataplants);\n  }\n  var currentUserLastOrder = useSelector(function (store) {\n    return store.usersReducer.currentUser.ordersHistory;\n  });\n  if (currentUserLastOrder.length !== 0) {\n    currentUserLastOrder = currentUserLastOrder[currentUserLastOrder.length - 1];\n    for (var x = 0; x < 5; x++) {\n      dispatch(addToSelectedPlants(currentUserLastOrder.plants[x]));\n    }\n  }\n  return _jsxs(View, {\n    style: styles.background,\n    children: [_jsx(NavBar, {}), _jsx(YourNextOrder, {}), _jsx(AvailablePlants, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: \"pink\"\n  }\n});\nexport default OrderScreen;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","plantsApi","AvailablePlants","NavBar","YourNextOrder","addToSelectedPlants","getAvailablePlants","OrderScreen","props","dispatch","dataplants","setDataPlants","endpoints","getPlants","useQuery","data","error","isLoading","plants","filter","id","cucumber_iznik","console","log","currentUserLastOrder","store","usersReducer","currentUser","ordersHistory","length","x","styles","background","StyleSheet","create","flex","backgroundColor"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/screens/OrderScreen.js"],"sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport { View, StyleSheet, Text } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plantsApi } from '../../services/plants';\r\nimport AvailablePlants from '../comps/AvailablePlants';\r\nimport NavBar from '../comps/NavBar';\r\nimport YourNextOrder from '../comps/YourNextOrder';\r\nimport { addToSelectedPlants, getAvailablePlants } from '../store/orderPlantsReducer';\r\n\r\n\r\nfunction OrderScreen(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // dispatch(getAvailablePlants());\r\n    const [dataplants,setDataPlants] = useState();\r\n\r\n    const { data, error, isLoading } = plantsApi.endpoints.getPlants.useQuery('plants.json');\r\n\r\n    if(data){\r\n        setDataPlants(data.plants.filter(plants => plants.id===cucumber_iznik));\r\n        console.log(dataplants);\r\n    }\r\n\r\n    var currentUserLastOrder = useSelector(store => store.usersReducer.currentUser.ordersHistory);\r\n\r\n    if (currentUserLastOrder.length !== 0) {\r\n\r\n        currentUserLastOrder = currentUserLastOrder[currentUserLastOrder.length - 1];\r\n\r\n        for (var x = 0; x < 5; x++) {\r\n            dispatch(addToSelectedPlants(currentUserLastOrder.plants[x]))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.background}>\r\n            <NavBar />\r\n            <YourNextOrder />\r\n            <AvailablePlants />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        backgroundColor: \"pink\"\r\n    }\r\n})\r\n\r\nexport default OrderScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAElD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS;AAClB,OAAOC,eAAe;AACtB,OAAOC,MAAM;AACb,OAAOC,aAAa;AACpB,SAASC,mBAAmB,EAAEC,kBAAkB;AAAsC;AAAA;AAGtF,SAASC,WAAW,CAACC,KAAK,EAAE;EAGxB,IAAMC,QAAQ,GAAGV,WAAW,EAAE;;EAG9B,gBAAmCD,QAAQ,EAAE;IAAA;IAAtCY,UAAU;IAACC,aAAa;EAE/B,4BAAmCV,SAAS,CAACW,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC;IAAhFC,IAAI,yBAAJA,IAAI;IAAEC,KAAK,yBAALA,KAAK;IAAEC,SAAS,yBAATA,SAAS;EAE9B,IAAGF,IAAI,EAAC;IACJJ,aAAa,CAACI,IAAI,CAACG,MAAM,CAACC,MAAM,CAAC,UAAAD,MAAM;MAAA,OAAIA,MAAM,CAACE,EAAE,KAAGC,cAAc;IAAA,EAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAACb,UAAU,CAAC;EAC3B;EAEA,IAAIc,oBAAoB,GAAGxB,WAAW,CAAC,UAAAyB,KAAK;IAAA,OAAIA,KAAK,CAACC,YAAY,CAACC,WAAW,CAACC,aAAa;EAAA,EAAC;EAE7F,IAAIJ,oBAAoB,CAACK,MAAM,KAAK,CAAC,EAAE;IAEnCL,oBAAoB,GAAGA,oBAAoB,CAACA,oBAAoB,CAACK,MAAM,GAAG,CAAC,CAAC;IAE5E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxBrB,QAAQ,CAACJ,mBAAmB,CAACmB,oBAAoB,CAACN,MAAM,CAACY,CAAC,CAAC,CAAC,CAAC;IACjE;EAEJ;EAEA,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,UAAW;IAAA,WAC3B,KAAC,MAAM,KAAG,EACV,KAAC,aAAa,KAAG,EACjB,KAAC,eAAe,KAAG;EAAA,EAChB;AAEf;AAEA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC7BF,UAAU,EAAE;IACRG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAEF,eAAe7B,WAAW"},"metadata":{},"sourceType":"module"}