{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useLayoutEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    flag = _useState4[0],\n    setFlag = _useState4[1];\n  function handleClick() {\n    setCount(function (c) {\n      return c + 1;\n    });\n    setFlag(function (f) {\n      return !f;\n    });\n  }\n\n  return _jsxs(\"div\", {\n    children: [_jsx(\"button\", {\n      onClick: handleClick,\n      children: \"Next\"\n    }), _jsx(\"h1\", {\n      style: {\n        color: flag ? \"blue\" : \"black\"\n      },\n      children: count\n    }), _jsx(LogEvents, {})]\n  });\n}\nfunction LogEvents(props) {\n  useLayoutEffect(function () {\n    console.log(\"Commit\");\n  });\n  console.log(\"Render\");\n  return null;\n}\nexport default App;","map":{"version":3,"names":["useState","useLayoutEffect","App","count","setCount","flag","setFlag","handleClick","c","f","color","LogEvents","props","console","log"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/App.js"],"sourcesContent":["import { useState, useLayoutEffect } from \"react\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [flag, setFlag] = useState(false);\n\n  function handleClick() {\n    setCount((c) => c + 1); // Does not re-render yet\n    setFlag((f) => !f); // Does not re-render yet\n    // React will only re-render once at the end (that's batching!)\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Next</button>\n      <h1 style={{ color: flag ? \"blue\" : \"black\" }}>{count}</h1>\n      <LogEvents />\n    </div>\n  );\n}\n\nfunction LogEvents(props) {\n  useLayoutEffect(() => {\n    console.log(\"Commit\");\n  });\n\n  console.log(\"Render\");\n\n  return null;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAAC;AAAA;AAElD,SAASC,GAAG,GAAG;EACb,gBAA0BF,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9BG,KAAK;IAAEC,QAAQ;EACtB,iBAAwBJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhCK,IAAI;IAAEC,OAAO;EAEpB,SAASC,WAAW,GAAG;IACrBH,QAAQ,CAAC,UAACI,CAAC;MAAA,OAAKA,CAAC,GAAG,CAAC;IAAA,EAAC;IACtBF,OAAO,CAAC,UAACG,CAAC;MAAA,OAAK,CAACA,CAAC;IAAA,EAAC;EAEpB;;EAEA,OACE;IAAA,WACE;MAAQ,OAAO,EAAEF,WAAY;MAAA;IAAA,EAAc,EAC3C;MAAI,KAAK,EAAE;QAAEG,KAAK,EAAEL,IAAI,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAA,UAAEF;IAAK,EAAM,EAC3D,KAAC,SAAS,KAAG;EAAA,EACT;AAEV;AAEA,SAASQ,SAAS,CAACC,KAAK,EAAE;EACxBX,eAAe,CAAC,YAAM;IACpBY,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC,CAAC;EAEFD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErB,OAAO,IAAI;AACb;AAEA,eAAeZ,GAAG"},"metadata":{},"sourceType":"module"}