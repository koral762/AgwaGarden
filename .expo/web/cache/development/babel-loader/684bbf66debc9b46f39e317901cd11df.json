{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport var plantsApi = createApi({\n  reducerPath: \"plantsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/\"\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getPlants: builder.query({\n        query: function query(type) {\n          return \"\" + type;\n        }\n      })\n    };\n  }\n});\nvar useGetAllPlantsQuery = plantsApi.useGetAllPlantsQuery;\nexport { useGetAllPlantsQuery };\nconsole.log('kokor');\nfetch('https://mywebsite.com/endpoint/', {\n  method: 'POST',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue'\n  })\n});\nvar data = getMoviesFromApiAsync();\nif (data) console.log('data', data);\nvar getMoviesFromApiAsync = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('https://reactnative.dev/movies.json');\n      var json = yield response.json();\n      return json.movies;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function getMoviesFromApiAsync() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["createApi","fetchBaseQuery","plantsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPlants","query","type","useGetAllPlantsQuery","console","log","fetch","method","headers","Accept","body","JSON","stringify","firstParam","secondParam","data","getMoviesFromApiAsync","response","json","movies","error"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/services/plants.js"],"sourcesContent":["\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n\r\nexport const plantsApi = createApi({\r\n    reducerPath: \"plantsApi\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: \"https://dev-agwa-public-static-assets-web.s3-us-west-2.amazonaws.com/data/catalogs/\",\r\n    }),\r\n    endpoints: (builder) => ({\r\n\r\n        getPlants: builder.query({\r\n\r\n            query: (type) => `${type}`,\r\n\r\n        })\r\n    })\r\n})\r\n\r\n\r\nexport const { useGetAllPlantsQuery } = plantsApi;\r\n\r\nconsole.log('kokor');\r\n\r\n\r\nfetch('https://mywebsite.com/endpoint/', {\r\n  method: 'POST',\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    firstParam: 'yourValue',\r\n    secondParam: 'yourOtherValue'\r\n  })\r\n});\r\n\r\nconst data = getMoviesFromApiAsync();\r\nif (data) console.log('data', data);\r\n\r\nconst getMoviesFromApiAsync = async () => {\r\n    try {\r\n        const response = await fetch(\r\n            'https://reactnative.dev/movies.json'\r\n        );\r\n        const json = await response.json();\r\n        return json.movies;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};"],"mappings":";AACA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,SAAS,EAAE,mBAACC,OAAO;IAAA,OAAM;MAErBC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAC;QAErBA,KAAK,EAAE,eAACC,IAAI;UAAA,YAAQA,IAAI;QAAA;MAE5B,CAAC;IACL,CAAC;EAAA;AACL,CAAC,CAAC;AAGK,IAAQC,oBAAoB,GAAKT,SAAS,CAAlCS,oBAAoB;AAAe;AAElDC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;AAGpBC,KAAK,CAAC,iCAAiC,EAAE;EACvCC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EAClB,CAAC;EACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IACnBC,UAAU,EAAE,WAAW;IACvBC,WAAW,EAAE;EACf,CAAC;AACH,CAAC,CAAC;AAEF,IAAMC,IAAI,GAAGC,qBAAqB,EAAE;AACpC,IAAID,IAAI,EAAEX,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEU,IAAI,CAAC;AAEnC,IAAMC,qBAAqB;EAAA,6BAAG,aAAY;IACtC,IAAI;MACA,IAAMC,QAAQ,SAASX,KAAK,CACxB,qCAAqC,CACxC;MACD,IAAMY,IAAI,SAASD,QAAQ,CAACC,IAAI,EAAE;MAClC,OAAOA,IAAI,CAACC,MAAM;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAAA,gBAVKJ,qBAAqB;IAAA;EAAA;AAAA,GAU1B"},"metadata":{},"sourceType":"module"}