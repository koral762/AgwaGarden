{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PlantsCirclePreview from \"./PlantsCirclePreview\";\nimport { useDimensions } from '@react-native-community/hooks';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AvailablePlants(props) {\n  var PrevieWidth = useDimensions().screen.width;\n  var availablePlants = useSelector(function (store) {\n    return store.orderPlantsReducer.availablePlants;\n  });\n  useEffect = (function () {}, []);\n  return _jsxs(View, {\n    style: styles.AvailablePlantsContainer,\n    children: [_jsx(View, {\n      style: styles.categoryPlants,\n      children: _jsx(FlatList, {\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        horizontal: true,\n        data: availablePlants,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(PlantsCirclePreview, {\n            PrevieWidth: PrevieWidth / 6,\n            margin: 10,\n            plant: item,\n            isSelected: false\n          });\n        }\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.button,\n        disabled: true,\n        children: _jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"SAVE CHANGES\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  AvailablePlantsContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(239,234,253,1)',\n    justifyContent: 'space-between'\n  },\n  categoryPlants: {\n    height: '70%',\n    width: '100%',\n    flexDirection: 'row',\n    paddingLeft: 9\n  },\n  buttonContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    backgroundColor: \"rgba(254,253,255,1)\"\n  },\n  button: {\n    backgroundColor: 'blue',\n    width: '80%',\n    height: '30%',\n    alignItems: 'center',\n    borderRadius: 8,\n    justifyContent: 'center',\n    backgroundColor: \"rgba(148,217,234,1)\"\n  }\n});\nexport default AvailablePlants;","map":{"version":3,"names":["React","PlantsCirclePreview","useDimensions","useSelector","useState","useEffect","AvailablePlants","props","PrevieWidth","screen","width","availablePlants","store","orderPlantsReducer","styles","AvailablePlantsContainer","categoryPlants","item","id","buttonContainer","button","fontWeight","StyleSheet","create","flex","backgroundColor","justifyContent","height","flexDirection","paddingLeft","alignItems","borderRadius"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/comps/AvailablePlants.js"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Text, TouchableOpacity, ScrollView, FlatList } from 'react-native';\r\nimport PlantsCirclePreview from './PlantsCirclePreview';\r\nimport { useDimensions } from '@react-native-community/hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction AvailablePlants(props) {\r\n\r\n    const PrevieWidth = useDimensions().screen.width;\r\n    const availablePlants = useSelector(store => store.orderPlantsReducer.availablePlants);\r\n\r\n    useEffect=(()=>{},[\r\n        \r\n    ])\r\n\r\n    return (\r\n        <View style={styles.AvailablePlantsContainer}>\r\n            <View style={styles.categoryPlants}>\r\n                <FlatList \r\n                keyExtractor={(item)=>item.id}\r\n                horizontal={true}\r\n                data={availablePlants} \r\n                renderItem={({item})=>(\r\n                    <PlantsCirclePreview PrevieWidth={PrevieWidth / 6} margin={10} plant={item} isSelected={false} />\r\n                )}/>\r\n\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.button} disabled={true}><Text style={{ fontWeight: 'bold' }}>SAVE CHANGES</Text></TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    AvailablePlantsContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(239,234,253,1)',\r\n        justifyContent: 'space-between'\r\n    },\r\n    categoryPlants: {\r\n        \r\n        height: '70%',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        paddingLeft: 9\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'yellow',\r\n        backgroundColor: \"rgba(254,253,255,1)\",\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        width: '80%',\r\n        height: '30%',\r\n        alignItems: 'center',\r\n        borderRadius: 8,\r\n        justifyContent: 'center',\r\n        backgroundColor: \"rgba(148,217,234,1)\",\r\n\r\n    }\r\n\r\n})\r\n\r\nexport default AvailablePlants;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B,OAAOC,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAG5C,SAASC,eAAe,CAACC,KAAK,EAAE;EAE5B,IAAMC,WAAW,GAAGN,aAAa,EAAE,CAACO,MAAM,CAACC,KAAK;EAChD,IAAMC,eAAe,GAAGR,WAAW,CAAC,UAAAS,KAAK;IAAA,OAAIA,KAAK,CAACC,kBAAkB,CAACF,eAAe;EAAA,EAAC;EAEtFN,SAAS,IAAE,YAAI,CAAC,CAAC,EAAC,EAEjB,CAAC;EAEF,OACI,MAAC,IAAI;IAAC,KAAK,EAAES,MAAM,CAACC,wBAAyB;IAAA,WACzC,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAA,UAC/B,KAAC,QAAQ;QACT,YAAY,EAAE,sBAACC,IAAI;UAAA,OAAGA,IAAI,CAACC,EAAE;QAAA,CAAC;QAC9B,UAAU,EAAE,IAAK;QACjB,IAAI,EAAEP,eAAgB;QACtB,UAAU,EAAE;UAAA,IAAEM,IAAI,QAAJA,IAAI;UAAA,OACd,KAAC,mBAAmB;YAAC,WAAW,EAAET,WAAW,GAAG,CAAE;YAAC,MAAM,EAAE,EAAG;YAAC,KAAK,EAAES,IAAK;YAAC,UAAU,EAAE;UAAM,EAAG;QAAA;MACnG;IAAE,EAED,EACP,KAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACK,eAAgB;MAAA,UAChC,KAAC,gBAAgB;QAAC,KAAK,EAAEL,MAAM,CAACM,MAAO;QAAC,QAAQ,EAAE,IAAK;QAAA,UAAC,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAA;QAAA;MAAoB;IAAmB,EAChI;EAAA,EACJ;AAEf;AAEA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAE7BR,wBAAwB,EAAE;IACtBS,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,qBAAqB;IACtCC,cAAc,EAAE;EACpB,CAAC;EACDV,cAAc,EAAE;IAEZW,MAAM,EAAE,KAAK;IACbjB,KAAK,EAAE,MAAM;IACbkB,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE;EACjB,CAAC;EACDV,eAAe,EAAE;IACbK,IAAI,EAAE,CAAC;IACPd,KAAK,EAAE,MAAM;IACboB,UAAU,EAAE,QAAQ;IACpBJ,cAAc,EAAE,QAAQ;IACxBD,eAAe,EAAE,QAAQ;IACzBA,eAAe,EAAE;EAErB,CAAC;EACDL,MAAM,EAAE;IACJK,eAAe,EAAE,MAAM;IACvBf,KAAK,EAAE,KAAK;IACZiB,MAAM,EAAE,KAAK;IACbG,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,CAAC;IACfL,cAAc,EAAE,QAAQ;IACxBD,eAAe,EAAE;EAErB;AAEJ,CAAC,CAAC;AAEF,eAAenB,eAAe"},"metadata":{},"sourceType":"module"}