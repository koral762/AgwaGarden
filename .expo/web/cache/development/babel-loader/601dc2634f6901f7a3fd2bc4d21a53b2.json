{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createSlice, current } from \"@reduxjs/toolkit\";\nvar orderPlantsReducer = createSlice({\n  name: \"orderPlantsReducer\",\n  initialState: {\n    availablePlants: [],\n    plantsCategories: [],\n    quantityLimit: 0,\n    selectedPlants: [],\n    newOrder: []\n  },\n  reducers: {\n    setAvailablePlantsFromApi: function setAvailablePlantsFromApi(state, action) {\n      var data = action.payload;\n      if (current(state.availablePlants).length === 0) {\n        data.map(function (item) {\n          state.availablePlants.push({\n            id: item.id,\n            name: item.name,\n            imageId: item.imageId,\n            isSelected: false\n          });\n        });\n      }\n    },\n    setCategoriesFromApi: function setCategoriesFromApi(state, action) {\n      var data = action.payload;\n      state.plantsCategories = _toConsumableArray(data);\n    },\n    addOrRemoveSelectedPlant: function addOrRemoveSelectedPlant(state, action) {\n      var _action$payload = action.payload,\n        id = _action$payload.id,\n        isSelected = _action$payload.isSelected;\n      var objPlantIdx = current(state.availablePlants).findIndex(function (item) {\n        return item.id === id;\n      });\n      state.availablePlants[objPlantIdx].isSelected = !isSelected;\n      state.selectedPlants = state.availablePlants.filter(function (item) {\n        return item.isSelected;\n      });\n      state.quantityLimit = state.selectedPlants.length;\n    },\n    addToSelectedPlants: function addToSelectedPlants(state, action) {\n      var plant = action.payload;\n      state.selectedPlants.push(plant);\n      var objPlantIdx = current(state.availablePlants).findIndex(function (item) {\n        return item.id === plant.id;\n      });\n      state.availablePlants[objPlantIdx].isSelected = true;\n      state.quantityLimit = state.selectedPlants.length;\n    },\n    getQuantityLimit: function getQuantityLimit(state, action) {\n      return current(state.selectedPlants).length;\n    },\n    createNewOrder: function createNewOrder(state, action) {\n      var user = action.payload;\n      var order = {\n        name: user.name,\n        email: user.email,\n        phoneNumber: user.phoneNumber,\n        address: user.address,\n        plants: current(state.selectedPlants)\n      };\n    }\n  }\n});\nvar _orderPlantsReducer$a = orderPlantsReducer.actions,\n  addOrRemoveSelectedPlant = _orderPlantsReducer$a.addOrRemoveSelectedPlant,\n  addToSelectedPlants = _orderPlantsReducer$a.addToSelectedPlants,\n  createNewOrder = _orderPlantsReducer$a.createNewOrder,\n  setAvailablePlantsFromApi = _orderPlantsReducer$a.setAvailablePlantsFromApi,\n  setCategoriesFromApi = _orderPlantsReducer$a.setCategoriesFromApi;\nexport { addOrRemoveSelectedPlant, addToSelectedPlants, createNewOrder, setAvailablePlantsFromApi, setCategoriesFromApi };\nexport default orderPlantsReducer.reducer;","map":{"version":3,"names":["createSlice","current","orderPlantsReducer","name","initialState","availablePlants","plantsCategories","quantityLimit","selectedPlants","newOrder","reducers","setAvailablePlantsFromApi","state","action","data","payload","length","map","item","push","id","imageId","isSelected","setCategoriesFromApi","addOrRemoveSelectedPlant","objPlantIdx","findIndex","filter","addToSelectedPlants","plant","getQuantityLimit","createNewOrder","user","order","email","phoneNumber","address","plants","actions","reducer"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/store/orderPlantsReducer.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst orderPlantsReducer = createSlice({\r\n  name: \"orderPlantsReducer\",\r\n\r\n  initialState: {\r\n    availablePlants: [],\r\n    plantsCategories: [],\r\n    quantityLimit: 0,\r\n    selectedPlants: [],\r\n    newOrder: []\r\n  },\r\n\r\n  reducers: {\r\n\r\n    setAvailablePlantsFromApi: (state, action) => {\r\n      const data = action.payload;\r\n      if (current(state.availablePlants).length === 0) {\r\n\r\n        data.map(item => {\r\n          state.availablePlants.push({\r\n            id: item.id,\r\n            name: item.name,\r\n            imageId: item.imageId,\r\n            isSelected: false,\r\n          });\r\n        })\r\n      }\r\n    },\r\n\r\n    setCategoriesFromApi: (state, action) => {\r\n      const data = action.payload;\r\n      state.plantsCategories = [...data];\r\n    },\r\n\r\n    addOrRemoveSelectedPlant: (state, action) => {\r\n\r\n      const { id, isSelected } = action.payload;\r\n\r\n      const objPlantIdx = current(state.availablePlants).findIndex(item => item.id === id);\r\n      state.availablePlants[objPlantIdx].isSelected = !isSelected;\r\n\r\n      state.selectedPlants = state.availablePlants.filter(item => item.isSelected);\r\n      state.quantityLimit = state.selectedPlants.length;\r\n    },\r\n\r\n    addToSelectedPlants: (state, action) => {\r\n\r\n      const plant = action.payload;\r\n      state.selectedPlants.push(plant);\r\n\r\n      const objPlantIdx = current(state.availablePlants).findIndex(item => item.id === plant.id);\r\n      state.availablePlants[objPlantIdx].isSelected = true;\r\n\r\n      state.quantityLimit = state.selectedPlants.length;\r\n    },\r\n\r\n    getQuantityLimit: (state, action) => {\r\n      return current(state.selectedPlants).length;\r\n    },\r\n\r\n    createNewOrder: (state, action) => {\r\n\r\n      const user = action.payload;\r\n\r\n      const order = {\r\n        name: user.name,\r\n        email: user.email,\r\n        phoneNumber: user.phoneNumber,\r\n        address: user.address,\r\n        plants: current(state.selectedPlants)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nexport const { addOrRemoveSelectedPlant, addToSelectedPlants, createNewOrder, setAvailablePlantsFromApi, setCategoriesFromApi } = orderPlantsReducer.actions;\r\nexport default orderPlantsReducer.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}