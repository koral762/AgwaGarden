{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport orderPlantsReducer from \"./orderPlantsReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { plantsApi } from \"../../services/plants\";\nexport var store = configureStore({\n  reducer: {\n    orderPlantsReducer: orderPlantsReducer,\n    usersReducer: usersReducer\n  },\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware().concat(plantsApi.middleware);\n  }\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","orderPlantsReducer","usersReducer","setupListeners","plantsApi","store","reducer","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/store/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport orderPlantsReducer from \"./orderPlantsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { plantsApi } from '../../services/plants';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    orderPlantsReducer: orderPlantsReducer,\r\n    usersReducer: usersReducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(plantsApi.middleware),\r\n})\r\n\r\nsetupListeners(store.dispatch);\r\n// The thunk middleware was automatically added\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,kBAAkB;AACzB,OAAOC,YAAY;AACnB,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,SAAS;AAElB,OAAO,IAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPL,kBAAkB,EAAEA,kBAAkB;IACtCC,YAAY,EAAEA;EAChB,CAAC;EAEDK,UAAU,EAAE,oBAACC,oBAAoB;IAAA,OAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAACL,SAAS,CAACG,UAAU,CAAC;EAAA;AACvD,CAAC,CAAC;AAEFJ,cAAc,CAACE,KAAK,CAACK,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}