{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nfunction useDimensions() {\n  var _a = react_1.useState({\n      window: react_native_1.Dimensions.get('window'),\n      screen: react_native_1.Dimensions.get('screen')\n    }),\n    dimensions = _a[0],\n    setDimensions = _a[1];\n  var onChange = function onChange(_a) {\n    var window = _a.window,\n      screen = _a.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  };\n  react_1.useEffect(function () {\n    var subscription = react_native_1.Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        react_native_1.Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n  return dimensions;\n}\nexports.useDimensions = useDimensions;","map":{"version":3,"mappings":";;;;;;AAAA;AAAyC;AAGzC,SAAgBA,aAAa;EACrB,SAA8BC,gBAAQ,CAAC;MAC3CC,MAAM,EAAEC,yBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;MAChCC,MAAM,EAAEF,yBAAU,CAACC,GAAG,CAAC,QAAQ;KAChC,CAAC;IAHKE,UAAU;IAAEC,aAAa,QAG9B;EAEF,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,EAMjB;QALCP,MAAM;MACNG,MAAM;IAKNE,aAAa,CAAC;MAACL,MAAM;MAAEG,MAAM;IAAA,CAAC,CAAC;EACjC,CAAC;EAEDJ,iBAAS,CAAC;IACR,IAAMS,YAAY,GAAGP,yBAAU,CAACQ,gBAAgB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAEpE,OAAO;MAEL,IAAI,QAAOE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,MAAM,MAAK,UAAU,EAAE;QAE9CF,YAAY,CAACE,MAAM,EAAE;OACtB,MAAM;QAELT,yBAAU,CAACU,mBAAmB,CAAC,QAAQ,EAAEL,QAAQ,CAAC;;IAEtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,UAAU;AACnB;AAhCAQ","names":["useDimensions","react_1","window","react_native_1","get","screen","dimensions","setDimensions","onChange","_a","subscription","addEventListener","remove","removeEventListener","exports"],"sourceRoot":"","sources":["../src/useDimensions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}