{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nvar orderPlantsReducer = createSlice({\n  name: \"orderPlantsReducer\",\n  initialState: {\n    availablePlants: [{\n      id: \"cucumber_iznik1\",\n      name: \"Cucumber - Iznik\",\n      imageId: \"iznik\"\n    }, {\n      id: \"tomato_sunrise1\",\n      name: \"Tomato - Sunrise\",\n      imageId: \"tomato_sunrise\"\n    }, {\n      id: \"tomato_bigdena1\",\n      name: \"Tomato - Bigdena\",\n      imageId: \"bigdena\"\n    }, {\n      id: \"cucumber_iznik\",\n      name: \"Cucumber - Iznik\",\n      imageId: \"iznik\"\n    }, {\n      id: \"tomato_sunrise\",\n      name: \"Tomato - Sunrise\",\n      imageId: \"tomato_sunrise\"\n    }, {\n      id: \"tomato_bigdena\",\n      name: \"Tomato - Bigdena\",\n      imageId: \"bigdena\"\n    }],\n    plantsCategories: [{\n      id: \"green_head\",\n      name: \"Green Head\",\n      plants: [{\n        id: \"pac_choi_mei_qing_choi\",\n        name: \"Pac Choi - Mei Qing Choi\"\n      }, {\n        id: \"lettuce_green_butter\",\n        name: \"Lettuce - Green Butter\"\n      }, {\n        id: \"lettuce_red_butter\",\n        name: \"Lettuce - Red Butter\"\n      }, {\n        id: \"lettuce_green_sweet_crisp\",\n        name: \"Lettuce - Green Sweet Crisp\"\n      }, {\n        id: \"lettuce_green_oakleaf\",\n        name: \"Lettuce - Green Oakleaf\"\n      }, {\n        id: \"lettuce_romain\",\n        name: \"Lettuce - Romain\"\n      }, {\n        id: \"lettuce_cherokee\",\n        name: \"Lettuce - Cherokee\"\n      }]\n    }, {\n      id: \"greens\",\n      name: \"Greens\",\n      plants: [{\n        id: \"arugula_esmee\",\n        name: \"Arugula - Esmee\"\n      }, {\n        id: \"chard_bright_lights\",\n        name: \"Chard - Bright Lights\"\n      }, {\n        id: \"mustard_greens_red_giant\",\n        name: \"Mustard Greens - Red Giant\"\n      }]\n    }, {\n      id: \"vines\",\n      name: \"Vines\",\n      plants: [{\n        id: \"cucumber_iznik\",\n        name: \"Cucumber - Iznik\"\n      }, {\n        id: \"tomato_sunrise\",\n        name: \"Tomato - Sunrise\"\n      }, {\n        id: \"tomato_bigdena\",\n        name: \"Tomato - Bigdena\"\n      }, {\n        id: \"tomato_beorange\",\n        name: \"Tomato - Beorange\"\n      }]\n    }],\n    quantityLimit: 0,\n    selectedPlants: [],\n    newOrder: []\n  },\n  reducers: {\n    getAvailablePlants: function getAvailablePlants(state, action) {},\n    addOrRemoveSelectedPlant: function addOrRemoveSelectedPlant(state, action) {\n      var _action$payload = action.payload,\n        id = _action$payload.id,\n        isSelected = _action$payload.isSelected;\n      var objPlantIdx = current(state.availablePlants).findIndex(function (item) {\n        return item.id === id;\n      });\n      state.availablePlants[objPlantIdx].isSelected = !isSelected;\n      state.selectedPlants = state.availablePlants.filter(function (item) {\n        return item.isSelected;\n      });\n      state.quantityLimit = state.selectedPlants.length;\n    },\n    addToSelectedPlants: function addToSelectedPlants(state, action) {\n      var plant = action.payload;\n      state.selectedPlants.push(plant);\n      var objPlantIdx = current(state.availablePlants).findIndex(function (item) {\n        return item.id === plant.id;\n      });\n      state.availablePlants[objPlantIdx].isSelected = true;\n      state.quantityLimit = state.selectedPlants.length;\n    },\n    getQuantityLimit: function getQuantityLimit(state, action) {\n      return current(state.selectedPlants).length;\n    },\n    createNewOrder: function createNewOrder(state, action) {\n      var user = action.payload;\n      var order = {\n        name: user.name,\n        email: user.email,\n        phoneNumber: user.phoneNumber,\n        address: user.address,\n        plants: current(state.selectedPlants)\n      };\n      console.log('new order:', order);\n    }\n  }\n});\nvar _orderPlantsReducer$a = orderPlantsReducer.actions,\n  addOrRemoveSelectedPlant = _orderPlantsReducer$a.addOrRemoveSelectedPlant,\n  getAvailablePlants = _orderPlantsReducer$a.getAvailablePlants,\n  addToSelectedPlants = _orderPlantsReducer$a.addToSelectedPlants,\n  createNewOrder = _orderPlantsReducer$a.createNewOrder;\nexport { addOrRemoveSelectedPlant, getAvailablePlants, addToSelectedPlants, createNewOrder };\nexport default orderPlantsReducer.reducer;","map":{"version":3,"names":["createSlice","current","orderPlantsReducer","name","initialState","availablePlants","id","imageId","plantsCategories","plants","quantityLimit","selectedPlants","newOrder","reducers","getAvailablePlants","state","action","addOrRemoveSelectedPlant","payload","isSelected","objPlantIdx","findIndex","item","filter","length","addToSelectedPlants","plant","push","getQuantityLimit","createNewOrder","user","order","email","phoneNumber","address","console","log","actions","reducer"],"sources":["C:/Users/PC/Desktop/projects/agwa/KoralApp/app/store/orderPlantsReducer.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst orderPlantsReducer = createSlice({\r\n  name: \"orderPlantsReducer\",\r\n\r\n  initialState: {\r\n    availablePlants: [\r\n      {\r\n        id: \"cucumber_iznik1\",\r\n        name: \"Cucumber - Iznik\",\r\n        imageId: \"iznik\"\r\n      },\r\n      {\r\n        id: \"tomato_sunrise1\",\r\n        name: \"Tomato - Sunrise\",\r\n        imageId: \"tomato_sunrise\"\r\n      },\r\n      {\r\n        id: \"tomato_bigdena1\",\r\n        name: \"Tomato - Bigdena\",\r\n        imageId: \"bigdena\"\r\n      },\r\n      {\r\n        id: \"cucumber_iznik\",\r\n        name: \"Cucumber - Iznik\",\r\n        imageId: \"iznik\"\r\n      },\r\n      {\r\n        id: \"tomato_sunrise\",\r\n        name: \"Tomato - Sunrise\",\r\n        imageId: \"tomato_sunrise\"\r\n      },\r\n      {\r\n        id: \"tomato_bigdena\",\r\n        name: \"Tomato - Bigdena\",\r\n        imageId: \"bigdena\"\r\n      }\r\n    ],\r\n    plantsCategories:\r\n      [\r\n        {\r\n          id: \"green_head\",\r\n          name: \"Green Head\",\r\n          plants: [\r\n            {\r\n              id: \"pac_choi_mei_qing_choi\",\r\n              name: \"Pac Choi - Mei Qing Choi\"\r\n            },\r\n            {\r\n              id: \"lettuce_green_butter\",\r\n              name: \"Lettuce - Green Butter\"\r\n            },\r\n            {\r\n              id: \"lettuce_red_butter\",\r\n              name: \"Lettuce - Red Butter\"\r\n            },\r\n            {\r\n              id: \"lettuce_green_sweet_crisp\",\r\n              name: \"Lettuce - Green Sweet Crisp\"\r\n            },\r\n            {\r\n              id: \"lettuce_green_oakleaf\",\r\n              name: \"Lettuce - Green Oakleaf\"\r\n            },\r\n            {\r\n              id: \"lettuce_romain\",\r\n              name: \"Lettuce - Romain\"\r\n            },\r\n            {\r\n              id: \"lettuce_cherokee\",\r\n              name: \"Lettuce - Cherokee\"\r\n            }]\r\n        },\r\n        {\r\n          id: \"greens\",\r\n          name: \"Greens\",\r\n          plants: [\r\n            {\r\n              id: \"arugula_esmee\",\r\n              name: \"Arugula - Esmee\"\r\n            },\r\n            {\r\n              id: \"chard_bright_lights\",\r\n              name: \"Chard - Bright Lights\"\r\n            },\r\n            {\r\n              id: \"mustard_greens_red_giant\",\r\n              name: \"Mustard Greens - Red Giant\"\r\n            }]\r\n        },\r\n        {\r\n          id: \"vines\",\r\n          name: \"Vines\",\r\n          plants: [\r\n            {\r\n              id: \"cucumber_iznik\",\r\n              name: \"Cucumber - Iznik\"\r\n            },\r\n            {\r\n              id: \"tomato_sunrise\",\r\n              name: \"Tomato - Sunrise\"\r\n            },\r\n            {\r\n              id: \"tomato_bigdena\",\r\n              name: \"Tomato - Bigdena\"\r\n            },\r\n            {\r\n              id: \"tomato_beorange\",\r\n              name: \"Tomato - Beorange\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    quantityLimit: 0,\r\n    selectedPlants: [],\r\n    newOrder: []\r\n  },\r\n\r\n  reducers: {\r\n\r\n    getAvailablePlants: (state, action) => {\r\n    },\r\n    addOrRemoveSelectedPlant: (state, action) => {\r\n\r\n      const { id, isSelected } = action.payload;\r\n\r\n      const objPlantIdx = current(state.availablePlants).findIndex(item => item.id === id);\r\n      state.availablePlants[objPlantIdx].isSelected = !isSelected;\r\n      \r\n      state.selectedPlants = state.availablePlants.filter(item => item.isSelected);\r\n      state.quantityLimit = state.selectedPlants.length;\r\n      \r\n    },\r\n    addToSelectedPlants: (state, action) => {\r\n      \r\n      const plant = action.payload;\r\n      state.selectedPlants.push(plant);\r\n\r\n      const objPlantIdx = current(state.availablePlants).findIndex(item => item.id === plant.id);\r\n      state.availablePlants[objPlantIdx].isSelected = true;\r\n      state.quantityLimit = state.selectedPlants.length;\r\n\r\n    },\r\n    getQuantityLimit: (state, action) => {\r\n      return current(state.selectedPlants).length;\r\n    },\r\n    createNewOrder: (state, action) => {\r\n\r\n      const user = action.payload;\r\n\r\n      const order = {\r\n        name: user.name,\r\n        email: user.email,\r\n        phoneNumber: user.phoneNumber,\r\n        address: user.address,\r\n        plants: current(state.selectedPlants)\r\n      }\r\n\r\n      console.log('new order:', order);\r\n\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nexport const { addOrRemoveSelectedPlant, getAvailablePlants,addToSelectedPlants, createNewOrder } = orderPlantsReducer.actions;\r\nexport default orderPlantsReducer.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}